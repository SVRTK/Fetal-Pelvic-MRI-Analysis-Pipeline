{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMBhmgosJZdkn2712suovhu"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Extracting the unique patient id's 🆔"],"metadata":{"id":"5aQTmis2KQE6"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cgvAdS1mKb81","executionInfo":{"status":"ok","timestamp":1747472018150,"user_tz":-60,"elapsed":21919,"user":{"displayName":"Yagmur Gerek","userId":"14326510970237181691"}},"outputId":"015b0a82-c487-4882-9887-0d6acfafd72d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["def extract_unique_patient_ids(directory_path):\n","    # Regex to capture strictly 'mibirth' followed by exactly 6 digits\n","    pattern = re.compile(r'mibirth\\d{6}')\n","\n","    unique_ids = set()\n","\n","    # Loop through each file in the directory\n","    for filename in os.listdir(directory_path):\n","        match = pattern.search(filename)\n","        if match:\n","            unique_ids.add(match.group())\n","\n","    return sorted(unique_ids)"],"metadata":{"id":"cHvaaUB3Ll5z"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Example usage\n","directory = '/content/drive/MyDrive/BEng_Project2/NEW/running-pelvis-and-fetus-landmarks/training-fetus-042025'\n","patient_ids_fetus = extract_unique_patient_ids(directory)\n","\n","# Output results\n","print(f\"Total unique patient IDs: {len(patient_ids_fetus)}\\n\")\n","print(\"List of unique patient IDs:\")\n","for pid in patient_ids_fetus:\n","    print(pid)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HmlP9_16KNjo","executionInfo":{"status":"ok","timestamp":1745437434095,"user_tz":-60,"elapsed":10,"user":{"displayName":"Yagmur Gerek","userId":"14326510970237181691"}},"outputId":"79959f59-0ac8-4ce8-9fe9-8ccc58a848cc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Total unique patient IDs: 67\n","\n","List of unique patient IDs:\n","mibirth003301\n","mibirth003501\n","mibirth003601\n","mibirth003801\n","mibirth003901\n","mibirth004501\n","mibirth004601\n","mibirth004701\n","mibirth005701\n","mibirth006101\n","mibirth006701\n","mibirth007001\n","mibirth007501\n","mibirth007801\n","mibirth007901\n","mibirth008001\n","mibirth008101\n","mibirth008201\n","mibirth008301\n","mibirth008501\n","mibirth008701\n","mibirth008801\n","mibirth008901\n","mibirth009801\n","mibirth009901\n","mibirth010001\n","mibirth010101\n","mibirth010201\n","mibirth010301\n","mibirth010701\n","mibirth010901\n","mibirth011201\n","mibirth011601\n","mibirth011701\n","mibirth012201\n","mibirth012601\n","mibirth013101\n","mibirth013201\n","mibirth013301\n","mibirth013701\n","mibirth014001\n","mibirth014401\n","mibirth014901\n","mibirth015601\n","mibirth016301\n","mibirth016401\n","mibirth016501\n","mibirth016701\n","mibirth016801\n","mibirth017001\n","mibirth017101\n","mibirth017301\n","mibirth017401\n","mibirth017601\n","mibirth017701\n","mibirth017801\n","mibirth017901\n","mibirth018001\n","mibirth018101\n","mibirth018401\n","mibirth018501\n","mibirth018601\n","mibirth018701\n","mibirth018901\n","mibirth019001\n","mibirth019201\n","mibirth019301\n"]}]},{"cell_type":"code","source":["# Example usage\n","directory = '/content/drive/MyDrive/BEng_Project2/NEW/running-crop-pelvis-multi_landmarks_2/updated-19032025-testing-crop-pelvis-multi-v3'  # <-- Replace with the actual folder path\n","patient_ids_pelvis = extract_unique_patient_ids(directory)\n","\n","# Output results\n","print(f\"Total unique patient IDs: {len(patient_ids_pelvis)}\\n\")\n","print(\"List of unique patient IDs:\")\n","for pid in patient_ids_pelvis:\n","    print(pid)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SWw2IS-HK9OJ","executionInfo":{"status":"ok","timestamp":1745437436320,"user_tz":-60,"elapsed":11,"user":{"displayName":"Yagmur Gerek","userId":"14326510970237181691"}},"outputId":"7dad097c-a9c2-4fe1-9e38-453a33ea45d6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Total unique patient IDs: 72\n","\n","List of unique patient IDs:\n","mibirth003301\n","mibirth003501\n","mibirth003601\n","mibirth003801\n","mibirth003901\n","mibirth004501\n","mibirth004601\n","mibirth004701\n","mibirth004901\n","mibirth005601\n","mibirth005701\n","mibirth006101\n","mibirth006701\n","mibirth006901\n","mibirth007001\n","mibirth007101\n","mibirth007501\n","mibirth007801\n","mibirth007901\n","mibirth008001\n","mibirth008101\n","mibirth008201\n","mibirth008301\n","mibirth008501\n","mibirth008701\n","mibirth008801\n","mibirth008901\n","mibirth009601\n","mibirth009801\n","mibirth009901\n","mibirth010001\n","mibirth010101\n","mibirth010201\n","mibirth010301\n","mibirth010701\n","mibirth010901\n","mibirth011201\n","mibirth011601\n","mibirth011701\n","mibirth012201\n","mibirth012601\n","mibirth013101\n","mibirth013201\n","mibirth013301\n","mibirth013701\n","mibirth014001\n","mibirth014401\n","mibirth014901\n","mibirth015601\n","mibirth016301\n","mibirth016401\n","mibirth016501\n","mibirth016701\n","mibirth016801\n","mibirth017001\n","mibirth017101\n","mibirth017301\n","mibirth017401\n","mibirth017601\n","mibirth017701\n","mibirth017801\n","mibirth017901\n","mibirth018001\n","mibirth018101\n","mibirth018401\n","mibirth018501\n","mibirth018601\n","mibirth018701\n","mibirth018901\n","mibirth019001\n","mibirth019201\n","mibirth019301\n"]}]},{"cell_type":"code","source":["\n","# Convert both to sets\n","set_fetus = set(patient_ids_fetus)\n","set_pelvis = set(patient_ids_pelvis)\n","\n","# IDs in fetus list but not in pelvis list\n","only_in_fetus = sorted(set_fetus - set_pelvis)\n","\n","# IDs in pelvis list but not in fetus list\n","only_in_pelvis = sorted(set_pelvis - set_fetus)\n","\n","# Common IDs (optional)\n","common_ids = sorted(set_fetus & set_pelvis)"],"metadata":{"id":"rjuf_pvtPLmR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["only_in_pelvis"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IfRXY59LQu-N","executionInfo":{"status":"ok","timestamp":1745437442831,"user_tz":-60,"elapsed":5,"user":{"displayName":"Yagmur Gerek","userId":"14326510970237181691"}},"outputId":"e45ab464-6eda-4e5d-9f05-ae17e163ee49"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['mibirth004901',\n"," 'mibirth005601',\n"," 'mibirth006901',\n"," 'mibirth007101',\n"," 'mibirth009601']"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["import pandas as pd\n","path_excel = '/content/drive/MyDrive/BEng_Project2/NEW/running-pelvis-and-fetus-landmarks/MiBirth-GAScanBirthAndDelive_DATA_LABELS_2025-04-09_1127.xlsx'\n","\n","# Load the Excel file\n","df = pd.read_excel(path_excel)  # e.g., 'patients.xlsx'\n","\n","# Ensure 'MiBirth ID' is treated as a string\n","df['MiBirth ID'] = df['MiBirth ID'].astype(str)\n","\n","# Step 1: Create the new full patient ID by appending '01'\n","df['Full Patient ID'] = df['MiBirth ID'] + '01'\n","\n","# Step 2: Filter rows where Full Patient ID is in set_pelvis\n","filtered_df = df[df['Full Patient ID'].isin(set_pelvis)]\n","filtered_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":614},"id":"HmRc1tJuU8Sv","executionInfo":{"status":"ok","timestamp":1745437445133,"user_tz":-60,"elapsed":169,"user":{"displayName":"Yagmur Gerek","userId":"14326510970237181691"}},"outputId":"80bf5650-7433-4972-aa39-8bf170b669be"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      MiBirth ID Event Name Repeat Instrument  Repeat Instance  \\\n","35   mibirth0033  Pregnancy    (1)* MRI Fetal                1   \n","37   mibirth0035  Pregnancy    (1)* MRI Fetal                1   \n","38   mibirth0036  Pregnancy    (1)* MRI Fetal                1   \n","40   mibirth0038  Pregnancy    (1)* MRI Fetal                1   \n","41   mibirth0039  Pregnancy    (1)* MRI Fetal                1   \n","..           ...        ...               ...              ...   \n","198  mibirth0187  Pregnancy    (1)* MRI Fetal                1   \n","200  mibirth0189  Pregnancy    (1)* MRI Fetal                1   \n","201  mibirth0190  Pregnancy    (1)* MRI Fetal                1   \n","203  mibirth0192  Pregnancy    (1)* MRI Fetal                1   \n","204  mibirth0193  Pregnancy    (1)* MRI Fetal                1   \n","\n","     What is the EDD by US? Date of MRI  GA for MRI Fetal (auto calculated)  \\\n","35                      NaN  2024-04-15                           37.000000   \n","37                      NaN  2024-04-16                           37.000000   \n","38                      NaN  2024-04-17                           37.428571   \n","40                      NaN  2024-04-29                           36.000000   \n","41                      NaN  2024-04-30                           37.142857   \n","..                      ...         ...                                 ...   \n","198                     NaN  2025-03-11                           36.000000   \n","200                     NaN  2025-03-11                           37.857143   \n","201                     NaN  2025-03-17                           37.428571   \n","203                     NaN  2025-03-18                           38.285714   \n","204                     NaN  2025-03-18                           36.285714   \n","\n","     GA at MRI (weeks)  GA at MRI (+days)  GA at birth Full Patient ID  \n","35                  37                  0          NaN   mibirth003301  \n","37                  37                  0          NaN   mibirth003501  \n","38                  37                  3          NaN   mibirth003601  \n","40                  36                  0          NaN   mibirth003801  \n","41                  37                  1          NaN   mibirth003901  \n","..                 ...                ...          ...             ...  \n","198                 36                  0          NaN   mibirth018701  \n","200                 37                  6          NaN   mibirth018901  \n","201                 37                  3          NaN   mibirth019001  \n","203                 38                  2          NaN   mibirth019201  \n","204                 36                  2          NaN   mibirth019301  \n","\n","[75 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-50247a81-574c-46e4-bc95-6da17f289e76\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MiBirth ID</th>\n","      <th>Event Name</th>\n","      <th>Repeat Instrument</th>\n","      <th>Repeat Instance</th>\n","      <th>What is the EDD by US?</th>\n","      <th>Date of MRI</th>\n","      <th>GA for MRI Fetal (auto calculated)</th>\n","      <th>GA at MRI (weeks)</th>\n","      <th>GA at MRI (+days)</th>\n","      <th>GA at birth</th>\n","      <th>Full Patient ID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>35</th>\n","      <td>mibirth0033</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2024-04-15</td>\n","      <td>37.000000</td>\n","      <td>37</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>mibirth003301</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>mibirth0035</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2024-04-16</td>\n","      <td>37.000000</td>\n","      <td>37</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>mibirth003501</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>mibirth0036</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2024-04-17</td>\n","      <td>37.428571</td>\n","      <td>37</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>mibirth003601</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>mibirth0038</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2024-04-29</td>\n","      <td>36.000000</td>\n","      <td>36</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>mibirth003801</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>mibirth0039</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2024-04-30</td>\n","      <td>37.142857</td>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>mibirth003901</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>mibirth0187</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2025-03-11</td>\n","      <td>36.000000</td>\n","      <td>36</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>mibirth018701</td>\n","    </tr>\n","    <tr>\n","      <th>200</th>\n","      <td>mibirth0189</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2025-03-11</td>\n","      <td>37.857143</td>\n","      <td>37</td>\n","      <td>6</td>\n","      <td>NaN</td>\n","      <td>mibirth018901</td>\n","    </tr>\n","    <tr>\n","      <th>201</th>\n","      <td>mibirth0190</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2025-03-17</td>\n","      <td>37.428571</td>\n","      <td>37</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>mibirth019001</td>\n","    </tr>\n","    <tr>\n","      <th>203</th>\n","      <td>mibirth0192</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2025-03-18</td>\n","      <td>38.285714</td>\n","      <td>38</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>mibirth019201</td>\n","    </tr>\n","    <tr>\n","      <th>204</th>\n","      <td>mibirth0193</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2025-03-18</td>\n","      <td>36.285714</td>\n","      <td>36</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>mibirth019301</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>75 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-50247a81-574c-46e4-bc95-6da17f289e76')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-50247a81-574c-46e4-bc95-6da17f289e76 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-50247a81-574c-46e4-bc95-6da17f289e76');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-173acf89-2d97-441f-ada8-cfefdcbe3edc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-173acf89-2d97-441f-ada8-cfefdcbe3edc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-173acf89-2d97-441f-ada8-cfefdcbe3edc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_758fc9c7-d486-4f56-9666-08f9e2ce9928\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('filtered_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_758fc9c7-d486-4f56-9666-08f9e2ce9928 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('filtered_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"filtered_df","summary":"{\n  \"name\": \"filtered_df\",\n  \"rows\": 75,\n  \"fields\": [\n    {\n      \"column\": \"MiBirth ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 72,\n        \"samples\": [\n          \"mibirth0039\",\n          \"mibirth0180\",\n          \"mibirth0079\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Event Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Pregnancy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Repeat Instrument\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"(1)* MRI Fetal\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Repeat Instance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"What is the EDD by US?\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date of MRI\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-04-15 00:00:00\",\n        \"max\": \"2025-03-25 00:00:00\",\n        \"num_unique_values\": 60,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GA for MRI Fetal (auto calculated)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0822066212933472,\n        \"min\": 35.8571428571428,\n        \"max\": 40.8571428571428,\n        \"num_unique_values\": 26,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GA at MRI (weeks)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 35,\n        \"max\": 40,\n        \"num_unique_values\": 6,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GA at MRI (+days)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GA at birth\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Full Patient ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 72,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["len(filtered_df['Full Patient ID'].unique())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3NhXZxeXVo61","executionInfo":{"status":"ok","timestamp":1745437457600,"user_tz":-60,"elapsed":4,"user":{"displayName":"Yagmur Gerek","userId":"14326510970237181691"}},"outputId":"ae74597b-a0cb-42c7-d7d0-7f5872302eea"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["72"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["len(filtered_df['Full Patient ID'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1Lolb1fgXnP6","executionInfo":{"status":"ok","timestamp":1745437458722,"user_tz":-60,"elapsed":5,"user":{"displayName":"Yagmur Gerek","userId":"14326510970237181691"}},"outputId":"5b056ec7-d4ba-48b0-aca5-24be6c9cf7eb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["75"]},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["# Show rows where 'Full Patient ID' is duplicated\n","duplicates = filtered_df[filtered_df['Full Patient ID'].duplicated(keep=False)]\n","\n","# Print result\n","print(f\"Total duplicate entries: {len(duplicates)}\")\n","duplicates\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":376},"id":"J0X2CpshWSc7","executionInfo":{"status":"ok","timestamp":1745437460882,"user_tz":-60,"elapsed":46,"user":{"displayName":"Yagmur Gerek","userId":"14326510970237181691"}},"outputId":"a5a2aa56-605b-40a9-db8e-5cafa3bac8c2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Total duplicate entries: 6\n"]},{"output_type":"execute_result","data":{"text/plain":["      MiBirth ID Event Name Repeat Instrument  Repeat Instance  \\\n","93   mibirth0089  Pregnancy    (1)* MRI Fetal                1   \n","94   mibirth0089  Pregnancy    (1)* MRI Fetal                2   \n","152  mibirth0144  Pregnancy    (1)* MRI Fetal                1   \n","153  mibirth0144  Pregnancy    (1)* MRI Fetal                2   \n","196  mibirth0186  Pregnancy    (1)* MRI Fetal                1   \n","197  mibirth0186  Pregnancy    (1)* MRI Fetal                2   \n","\n","     What is the EDD by US? Date of MRI  GA for MRI Fetal (auto calculated)  \\\n","93                      NaN  2024-08-27                           37.714286   \n","94                      NaN  2024-09-03                           38.714286   \n","152                     NaN  2024-11-25                           36.142857   \n","153                     NaN  2024-12-03                           37.285714   \n","196                     NaN  2025-03-10                           36.571429   \n","197                     NaN  2025-03-25                           38.714286   \n","\n","     GA at MRI (weeks)  GA at MRI (+days)  GA at birth Full Patient ID  \n","93                  37                  5          NaN   mibirth008901  \n","94                  38                  5          NaN   mibirth008901  \n","152                 36                  1          NaN   mibirth014401  \n","153                 37                  2          NaN   mibirth014401  \n","196                 36                  4          NaN   mibirth018601  \n","197                 38                  5          NaN   mibirth018601  "],"text/html":["\n","  <div id=\"df-6a8bb916-a2be-4ad1-b56c-5f3eba6b4fd5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MiBirth ID</th>\n","      <th>Event Name</th>\n","      <th>Repeat Instrument</th>\n","      <th>Repeat Instance</th>\n","      <th>What is the EDD by US?</th>\n","      <th>Date of MRI</th>\n","      <th>GA for MRI Fetal (auto calculated)</th>\n","      <th>GA at MRI (weeks)</th>\n","      <th>GA at MRI (+days)</th>\n","      <th>GA at birth</th>\n","      <th>Full Patient ID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>93</th>\n","      <td>mibirth0089</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2024-08-27</td>\n","      <td>37.714286</td>\n","      <td>37</td>\n","      <td>5</td>\n","      <td>NaN</td>\n","      <td>mibirth008901</td>\n","    </tr>\n","    <tr>\n","      <th>94</th>\n","      <td>mibirth0089</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>2024-09-03</td>\n","      <td>38.714286</td>\n","      <td>38</td>\n","      <td>5</td>\n","      <td>NaN</td>\n","      <td>mibirth008901</td>\n","    </tr>\n","    <tr>\n","      <th>152</th>\n","      <td>mibirth0144</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2024-11-25</td>\n","      <td>36.142857</td>\n","      <td>36</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>mibirth014401</td>\n","    </tr>\n","    <tr>\n","      <th>153</th>\n","      <td>mibirth0144</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>2024-12-03</td>\n","      <td>37.285714</td>\n","      <td>37</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>mibirth014401</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>mibirth0186</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2025-03-10</td>\n","      <td>36.571429</td>\n","      <td>36</td>\n","      <td>4</td>\n","      <td>NaN</td>\n","      <td>mibirth018601</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>mibirth0186</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>2025-03-25</td>\n","      <td>38.714286</td>\n","      <td>38</td>\n","      <td>5</td>\n","      <td>NaN</td>\n","      <td>mibirth018601</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6a8bb916-a2be-4ad1-b56c-5f3eba6b4fd5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6a8bb916-a2be-4ad1-b56c-5f3eba6b4fd5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6a8bb916-a2be-4ad1-b56c-5f3eba6b4fd5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cc0eaf68-4eb8-487e-9d64-229331d2bbca\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cc0eaf68-4eb8-487e-9d64-229331d2bbca')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cc0eaf68-4eb8-487e-9d64-229331d2bbca button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a6853ec1-e05c-4d37-96e8-f249b6dc641d\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('duplicates')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a6853ec1-e05c-4d37-96e8-f249b6dc641d button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('duplicates');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"duplicates","summary":"{\n  \"name\": \"duplicates\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"MiBirth ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"mibirth0089\",\n          \"mibirth0144\",\n          \"mibirth0186\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Event Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Pregnancy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Repeat Instrument\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"(1)* MRI Fetal\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Repeat Instance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"What is the EDD by US?\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date of MRI\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-08-27 00:00:00\",\n        \"max\": \"2025-03-25 00:00:00\",\n        \"num_unique_values\": 6,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GA for MRI Fetal (auto calculated)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0715872898312744,\n        \"min\": 36.1428571428571,\n        \"max\": 38.7142857142857,\n        \"num_unique_values\": 5,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GA at MRI (weeks)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 36,\n        \"max\": 38,\n        \"num_unique_values\": 3,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GA at MRI (+days)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 4,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GA at birth\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Full Patient ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["# Step 1: Identify duplicate patient IDs\n","duplicate_ids = filtered_df['Full Patient ID'][filtered_df['Full Patient ID'].duplicated(keep=False)]\n","\n","# Step 2: Keep only Repeat Instance == 2 for duplicated patients\n","duplicates_filtered = filtered_df[\n","    (filtered_df['Full Patient ID'].isin(duplicate_ids)) &\n","    (filtered_df['Repeat Instance'] == 2)\n","]\n","\n","# Step 3: Keep all non-duplicate patients\n","non_duplicates = filtered_df[~filtered_df['Full Patient ID'].isin(duplicate_ids)]\n","\n","# Step 4: Combine both sets\n","final_df = pd.concat([non_duplicates, duplicates_filtered], ignore_index=True)\n","\n","# Output result\n","print(f\"Total rows after keeping second instance of duplicates: {len(final_df)}\")\n","final_df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":632},"id":"_FxczWducVbZ","executionInfo":{"status":"ok","timestamp":1745437464445,"user_tz":-60,"elapsed":40,"user":{"displayName":"Yagmur Gerek","userId":"14326510970237181691"}},"outputId":"5fffc808-6ba0-4eca-e313-91f42a4e064a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Total rows after keeping second instance of duplicates: 72\n"]},{"output_type":"execute_result","data":{"text/plain":["     MiBirth ID Event Name Repeat Instrument  Repeat Instance  \\\n","0   mibirth0033  Pregnancy    (1)* MRI Fetal                1   \n","1   mibirth0035  Pregnancy    (1)* MRI Fetal                1   \n","2   mibirth0036  Pregnancy    (1)* MRI Fetal                1   \n","3   mibirth0038  Pregnancy    (1)* MRI Fetal                1   \n","4   mibirth0039  Pregnancy    (1)* MRI Fetal                1   \n","..          ...        ...               ...              ...   \n","67  mibirth0192  Pregnancy    (1)* MRI Fetal                1   \n","68  mibirth0193  Pregnancy    (1)* MRI Fetal                1   \n","69  mibirth0089  Pregnancy    (1)* MRI Fetal                2   \n","70  mibirth0144  Pregnancy    (1)* MRI Fetal                2   \n","71  mibirth0186  Pregnancy    (1)* MRI Fetal                2   \n","\n","    What is the EDD by US? Date of MRI  GA for MRI Fetal (auto calculated)  \\\n","0                      NaN  2024-04-15                           37.000000   \n","1                      NaN  2024-04-16                           37.000000   \n","2                      NaN  2024-04-17                           37.428571   \n","3                      NaN  2024-04-29                           36.000000   \n","4                      NaN  2024-04-30                           37.142857   \n","..                     ...         ...                                 ...   \n","67                     NaN  2025-03-18                           38.285714   \n","68                     NaN  2025-03-18                           36.285714   \n","69                     NaN  2024-09-03                           38.714286   \n","70                     NaN  2024-12-03                           37.285714   \n","71                     NaN  2025-03-25                           38.714286   \n","\n","    GA at MRI (weeks)  GA at MRI (+days)  GA at birth Full Patient ID  \n","0                  37                  0          NaN   mibirth003301  \n","1                  37                  0          NaN   mibirth003501  \n","2                  37                  3          NaN   mibirth003601  \n","3                  36                  0          NaN   mibirth003801  \n","4                  37                  1          NaN   mibirth003901  \n","..                ...                ...          ...             ...  \n","67                 38                  2          NaN   mibirth019201  \n","68                 36                  2          NaN   mibirth019301  \n","69                 38                  5          NaN   mibirth008901  \n","70                 37                  2          NaN   mibirth014401  \n","71                 38                  5          NaN   mibirth018601  \n","\n","[72 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-3661da1c-5f38-4698-8914-b3025b5521d7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MiBirth ID</th>\n","      <th>Event Name</th>\n","      <th>Repeat Instrument</th>\n","      <th>Repeat Instance</th>\n","      <th>What is the EDD by US?</th>\n","      <th>Date of MRI</th>\n","      <th>GA for MRI Fetal (auto calculated)</th>\n","      <th>GA at MRI (weeks)</th>\n","      <th>GA at MRI (+days)</th>\n","      <th>GA at birth</th>\n","      <th>Full Patient ID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>mibirth0033</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2024-04-15</td>\n","      <td>37.000000</td>\n","      <td>37</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>mibirth003301</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>mibirth0035</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2024-04-16</td>\n","      <td>37.000000</td>\n","      <td>37</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>mibirth003501</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>mibirth0036</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2024-04-17</td>\n","      <td>37.428571</td>\n","      <td>37</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>mibirth003601</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>mibirth0038</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2024-04-29</td>\n","      <td>36.000000</td>\n","      <td>36</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>mibirth003801</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>mibirth0039</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2024-04-30</td>\n","      <td>37.142857</td>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>mibirth003901</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>67</th>\n","      <td>mibirth0192</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2025-03-18</td>\n","      <td>38.285714</td>\n","      <td>38</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>mibirth019201</td>\n","    </tr>\n","    <tr>\n","      <th>68</th>\n","      <td>mibirth0193</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2025-03-18</td>\n","      <td>36.285714</td>\n","      <td>36</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>mibirth019301</td>\n","    </tr>\n","    <tr>\n","      <th>69</th>\n","      <td>mibirth0089</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>2024-09-03</td>\n","      <td>38.714286</td>\n","      <td>38</td>\n","      <td>5</td>\n","      <td>NaN</td>\n","      <td>mibirth008901</td>\n","    </tr>\n","    <tr>\n","      <th>70</th>\n","      <td>mibirth0144</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>2024-12-03</td>\n","      <td>37.285714</td>\n","      <td>37</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>mibirth014401</td>\n","    </tr>\n","    <tr>\n","      <th>71</th>\n","      <td>mibirth0186</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>2025-03-25</td>\n","      <td>38.714286</td>\n","      <td>38</td>\n","      <td>5</td>\n","      <td>NaN</td>\n","      <td>mibirth018601</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>72 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3661da1c-5f38-4698-8914-b3025b5521d7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3661da1c-5f38-4698-8914-b3025b5521d7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3661da1c-5f38-4698-8914-b3025b5521d7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-434bc799-9f05-493d-9f32-301c815c8790\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-434bc799-9f05-493d-9f32-301c815c8790')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-434bc799-9f05-493d-9f32-301c815c8790 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_43e6eae0-bf52-4585-853c-bc09d9781bc3\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('final_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_43e6eae0-bf52-4585-853c-bc09d9781bc3 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('final_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"final_df","summary":"{\n  \"name\": \"final_df\",\n  \"rows\": 72,\n  \"fields\": [\n    {\n      \"column\": \"MiBirth ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 72,\n        \"samples\": [\n          \"mibirth0039\",\n          \"mibirth0184\",\n          \"mibirth0079\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Event Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Pregnancy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Repeat Instrument\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"(1)* MRI Fetal\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Repeat Instance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"What is the EDD by US?\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date of MRI\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-04-15 00:00:00\",\n        \"max\": \"2025-03-25 00:00:00\",\n        \"num_unique_values\": 57,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GA for MRI Fetal (auto calculated)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0884298349480546,\n        \"min\": 35.8571428571428,\n        \"max\": 40.8571428571428,\n        \"num_unique_values\": 26,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GA at MRI (weeks)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 35,\n        \"max\": 40,\n        \"num_unique_values\": 6,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GA at MRI (+days)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GA at birth\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Full Patient ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 72,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":71}]},{"cell_type":"markdown","source":["## Adding the patient races"],"metadata":{"id":"sE5oXI5medjO"}},{"cell_type":"code","source":["# Step 1: Load the new Excel file with ethnic group info\n","df_new = pd.read_excel('/content/drive/MyDrive/BEng_Project2/NEW/running-pelvis-and-fetus-landmarks/MiBirth-DemographicmedicalHi_DATA_LABELS_2025-04-09_1107.xlsx')  # replace with your actual path\n","\n","# Step 2: Ensure 'MiBirth ID' is string type in both DataFrames\n","df_new['MiBirth ID'] = df_new['MiBirth ID'].astype(str)\n","final_df['MiBirth ID'] = final_df['MiBirth ID'].astype(str)\n","\n","# Step 3: Merge the ethnic group column into final_df\n","final_df_merged = final_df.merge(\n","    df_new[['MiBirth ID', \"What is the woman's ethnic group?\"]],\n","    on='MiBirth ID',\n","    how='left'  # ensures only patients in final_df are kept\n",")\n","\n","# Step 4: Rename the column AFTER merging\n","final_df_merged = final_df_merged.rename(\n","    columns={\"What is the woman's ethnic group?\": \"Ethnic Group\"}\n",")\n","\n","# Step 5: View result\n","print(f\"Merged DataFrame shape: {final_df_merged.shape}\")\n","final_df_merged.head()\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":362},"id":"mQm1BjkQehT5","executionInfo":{"status":"ok","timestamp":1745437471099,"user_tz":-60,"elapsed":124,"user":{"displayName":"Yagmur Gerek","userId":"14326510970237181691"}},"outputId":"edf4e186-bc83-4a54-9fdb-8b9d89033cb7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Merged DataFrame shape: (72, 12)\n"]},{"output_type":"execute_result","data":{"text/plain":["    MiBirth ID Event Name Repeat Instrument  Repeat Instance  \\\n","0  mibirth0033  Pregnancy    (1)* MRI Fetal                1   \n","1  mibirth0035  Pregnancy    (1)* MRI Fetal                1   \n","2  mibirth0036  Pregnancy    (1)* MRI Fetal                1   \n","3  mibirth0038  Pregnancy    (1)* MRI Fetal                1   \n","4  mibirth0039  Pregnancy    (1)* MRI Fetal                1   \n","\n","   What is the EDD by US? Date of MRI  GA for MRI Fetal (auto calculated)  \\\n","0                     NaN  2024-04-15                           37.000000   \n","1                     NaN  2024-04-16                           37.000000   \n","2                     NaN  2024-04-17                           37.428571   \n","3                     NaN  2024-04-29                           36.000000   \n","4                     NaN  2024-04-30                           37.142857   \n","\n","   GA at MRI (weeks)  GA at MRI (+days)  GA at birth Full Patient ID  \\\n","0                 37                  0          NaN   mibirth003301   \n","1                 37                  0          NaN   mibirth003501   \n","2                 37                  3          NaN   mibirth003601   \n","3                 36                  0          NaN   mibirth003801   \n","4                 37                  1          NaN   mibirth003901   \n","\n","                                    Ethnic Group  \n","0  Asian (Indian, Pakistani, Bangladeshi, other)  \n","1              Black (Caribbean, African, other)  \n","2                                  White (other)  \n","3                                    Mixed Black  \n","4                                  White (other)  "],"text/html":["\n","  <div id=\"df-186b2f2c-f706-4e72-973c-080aaf357618\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MiBirth ID</th>\n","      <th>Event Name</th>\n","      <th>Repeat Instrument</th>\n","      <th>Repeat Instance</th>\n","      <th>What is the EDD by US?</th>\n","      <th>Date of MRI</th>\n","      <th>GA for MRI Fetal (auto calculated)</th>\n","      <th>GA at MRI (weeks)</th>\n","      <th>GA at MRI (+days)</th>\n","      <th>GA at birth</th>\n","      <th>Full Patient ID</th>\n","      <th>Ethnic Group</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>mibirth0033</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2024-04-15</td>\n","      <td>37.000000</td>\n","      <td>37</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>mibirth003301</td>\n","      <td>Asian (Indian, Pakistani, Bangladeshi, other)</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>mibirth0035</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2024-04-16</td>\n","      <td>37.000000</td>\n","      <td>37</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>mibirth003501</td>\n","      <td>Black (Caribbean, African, other)</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>mibirth0036</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2024-04-17</td>\n","      <td>37.428571</td>\n","      <td>37</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>mibirth003601</td>\n","      <td>White (other)</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>mibirth0038</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2024-04-29</td>\n","      <td>36.000000</td>\n","      <td>36</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>mibirth003801</td>\n","      <td>Mixed Black</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>mibirth0039</td>\n","      <td>Pregnancy</td>\n","      <td>(1)* MRI Fetal</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>2024-04-30</td>\n","      <td>37.142857</td>\n","      <td>37</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>mibirth003901</td>\n","      <td>White (other)</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-186b2f2c-f706-4e72-973c-080aaf357618')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-186b2f2c-f706-4e72-973c-080aaf357618 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-186b2f2c-f706-4e72-973c-080aaf357618');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e7d66de9-5591-46ca-981d-631bb74cff54\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e7d66de9-5591-46ca-981d-631bb74cff54')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e7d66de9-5591-46ca-981d-631bb74cff54 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"final_df_merged","summary":"{\n  \"name\": \"final_df_merged\",\n  \"rows\": 72,\n  \"fields\": [\n    {\n      \"column\": \"MiBirth ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 72,\n        \"samples\": [\n          \"mibirth0039\",\n          \"mibirth0184\",\n          \"mibirth0079\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Event Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Pregnancy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Repeat Instrument\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"(1)* MRI Fetal\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Repeat Instance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"What is the EDD by US?\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date of MRI\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-04-15 00:00:00\",\n        \"max\": \"2025-03-25 00:00:00\",\n        \"num_unique_values\": 57,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GA for MRI Fetal (auto calculated)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0884298349480546,\n        \"min\": 35.8571428571428,\n        \"max\": 40.8571428571428,\n        \"num_unique_values\": 26,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GA at MRI (weeks)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 35,\n        \"max\": 40,\n        \"num_unique_values\": 6,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GA at MRI (+days)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GA at birth\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Full Patient ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 72,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ethnic Group\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["final_df_merged['Ethnic Group'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VOTmS3Akezqs","executionInfo":{"status":"ok","timestamp":1745437474137,"user_tz":-60,"elapsed":4,"user":{"displayName":"Yagmur Gerek","userId":"14326510970237181691"}},"outputId":"933ee1be-e16b-4f78-e970-ea16763acae9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Asian (Indian, Pakistani, Bangladeshi, other)',\n","       'Black (Caribbean, African, other)', 'White (other)',\n","       'Mixed Black', 'East Asian (Chinese,Japanese etc)',\n","       'White (British/Irish)', 'Other', 'Mixed Asian',\n","       'Middle Eastern (Moroccan, Egyptian, Lebanese, UAE)'], dtype=object)"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["import plotly.express as px\n","import pandas as pd\n","\n","# Ensure columns are correctly typed\n","final_df_merged['GA at MRI (weeks)'] = pd.to_numeric(final_df_merged['GA at MRI (weeks)'], errors='coerce')\n","final_df_merged['Ethnic Group'] = final_df_merged['Ethnic Group'].astype(str)\n","\n","# Drop rows with missing GA or Ethnic Group\n","ga_ethnic_df = final_df_merged.dropna(subset=['GA at MRI (weeks)', 'Ethnic Group'])\n","\n","# Round GA to whole weeks (optional, for cleaner x-axis grouping)\n","ga_ethnic_df['GA Rounded'] = ga_ethnic_df['GA at MRI (weeks)'].round().astype(int)\n","\n","# Group and count\n","grouped = ga_ethnic_df.groupby(['GA Rounded', 'Ethnic Group']).size().reset_index(name='Count')\n","\n","# Custom color palette\n","custom_palette = px.colors.qualitative.Safe  # Or use your own list of hex codes\n","\n","# Plot\n","fig = px.bar(\n","    grouped,\n","    x='GA Rounded',\n","    y='Count',\n","    color='Ethnic Group',\n","    color_discrete_sequence=custom_palette,\n","    barmode='stack', #group\n","    title='Patient Count by GA at MRI (weeks) and Ethnic Group',\n","    labels={'GA Rounded': 'GA at MRI (weeks)', 'Count': 'Number of Patients'},\n","    height=450,  # ⬅️ reduced from 550 to 400\n","    width=1000    # ⬅️ optionally add width control\n",")\n","\n","fig.update_layout(\n","    xaxis=dict(tickmode='linear'),\n","    bargap=0.15\n",")\n","\n","fig.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"qLwdBls7fZMA","executionInfo":{"status":"ok","timestamp":1745438099843,"user_tz":-60,"elapsed":210,"user":{"displayName":"Yagmur Gerek","userId":"14326510970237181691"}},"outputId":"af9c1854-257a-4e9f-f93b-296576d19252"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"8653ca93-5fd5-4544-8847-28fde2380360\" class=\"plotly-graph-div\" style=\"height:450px; width:1000px;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"8653ca93-5fd5-4544-8847-28fde2380360\")) {                    Plotly.newPlot(                        \"8653ca93-5fd5-4544-8847-28fde2380360\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Ethnic Group=White (other)\\u003cbr\\u003eGA at MRI (weeks)=%{x}\\u003cbr\\u003eNumber of Patients=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"White (other)\",\"marker\":{\"color\":\"rgb(136, 204, 238)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"White (other)\",\"offsetgroup\":\"White (other)\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[35,36,37,38,39,40],\"xaxis\":\"x\",\"y\":[1,8,8,3,1,1],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Ethnic Group=Black (Caribbean, African, other)\\u003cbr\\u003eGA at MRI (weeks)=%{x}\\u003cbr\\u003eNumber of Patients=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Black (Caribbean, African, other)\",\"marker\":{\"color\":\"rgb(204, 102, 119)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Black (Caribbean, African, other)\",\"offsetgroup\":\"Black (Caribbean, African, other)\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[36,37],\"xaxis\":\"x\",\"y\":[6,4],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Ethnic Group=East Asian (Chinese,Japanese etc)\\u003cbr\\u003eGA at MRI (weeks)=%{x}\\u003cbr\\u003eNumber of Patients=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"East Asian (Chinese,Japanese etc)\",\"marker\":{\"color\":\"rgb(221, 204, 119)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"East Asian (Chinese,Japanese etc)\",\"offsetgroup\":\"East Asian (Chinese,Japanese etc)\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[36,37,38],\"xaxis\":\"x\",\"y\":[2,2,6],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Ethnic Group=Mixed Asian\\u003cbr\\u003eGA at MRI (weeks)=%{x}\\u003cbr\\u003eNumber of Patients=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Mixed Asian\",\"marker\":{\"color\":\"rgb(17, 119, 51)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Mixed Asian\",\"offsetgroup\":\"Mixed Asian\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[36],\"xaxis\":\"x\",\"y\":[1],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Ethnic Group=Mixed Black\\u003cbr\\u003eGA at MRI (weeks)=%{x}\\u003cbr\\u003eNumber of Patients=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Mixed Black\",\"marker\":{\"color\":\"rgb(51, 34, 136)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Mixed Black\",\"offsetgroup\":\"Mixed Black\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[36,37,39],\"xaxis\":\"x\",\"y\":[2,1,1],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Ethnic Group=White (British\\u002fIrish)\\u003cbr\\u003eGA at MRI (weeks)=%{x}\\u003cbr\\u003eNumber of Patients=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"White (British\\u002fIrish)\",\"marker\":{\"color\":\"rgb(170, 68, 153)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"White (British\\u002fIrish)\",\"offsetgroup\":\"White (British\\u002fIrish)\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[36,37,38,39,40],\"xaxis\":\"x\",\"y\":[3,7,5,1,1],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Ethnic Group=Asian (Indian, Pakistani, Bangladeshi, other)\\u003cbr\\u003eGA at MRI (weeks)=%{x}\\u003cbr\\u003eNumber of Patients=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Asian (Indian, Pakistani, Bangladeshi, other)\",\"marker\":{\"color\":\"rgb(68, 170, 153)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Asian (Indian, Pakistani, Bangladeshi, other)\",\"offsetgroup\":\"Asian (Indian, Pakistani, Bangladeshi, other)\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[37,38,40],\"xaxis\":\"x\",\"y\":[3,2,1],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Ethnic Group=Other\\u003cbr\\u003eGA at MRI (weeks)=%{x}\\u003cbr\\u003eNumber of Patients=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Other\",\"marker\":{\"color\":\"rgb(153, 153, 51)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Other\",\"offsetgroup\":\"Other\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[37],\"xaxis\":\"x\",\"y\":[1],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Ethnic Group=Middle Eastern (Moroccan, Egyptian, Lebanese, UAE)\\u003cbr\\u003eGA at MRI (weeks)=%{x}\\u003cbr\\u003eNumber of Patients=%{y}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"Middle Eastern (Moroccan, Egyptian, Lebanese, UAE)\",\"marker\":{\"color\":\"rgb(136, 34, 85)\",\"pattern\":{\"shape\":\"\"}},\"name\":\"Middle Eastern (Moroccan, Egyptian, Lebanese, UAE)\",\"offsetgroup\":\"Middle Eastern (Moroccan, Egyptian, Lebanese, UAE)\",\"orientation\":\"v\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[38],\"xaxis\":\"x\",\"y\":[1],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"GA at MRI (weeks)\"},\"tickmode\":\"linear\"},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Number of Patients\"}},\"legend\":{\"title\":{\"text\":\"Ethnic Group\"},\"tracegroupgap\":0},\"title\":{\"text\":\"Patient Count by GA at MRI (weeks) and Ethnic Group\"},\"barmode\":\"stack\",\"height\":450,\"width\":1000,\"bargap\":0.15},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('8653ca93-5fd5-4544-8847-28fde2380360');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]}]}